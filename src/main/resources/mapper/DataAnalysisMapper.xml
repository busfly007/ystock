<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingyun.dao.DataAnalysisDao">     
    
    <select id="avgMacroDataList" parameterType="map" resultType="com.qingyun.entity.MacroData">
        SELECT stock_code as stockCode,MAX(stock_name) as stockName,round(AVG(now_price),2) as averagePrice FROM stock.stock_data 
        <!-- 判断条件参数是否为空 -->
	    <if test="stockName != null and stockName != ''">
	        where (stock_name like '%${stockName}%' or stock_code like '%${stockName}%' ) 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
        GROUP BY stock_code
        order by stock_code asc  
        limit #{startIndex} , #{pageSize}
    </select> 
    
    <select id="nowMacroDataList" parameterType="map" resultType="com.qingyun.entity.MacroData">
        SELECT * FROM (SELECT now_price as nowPrice,data_date as nowPriceDate,stock_code as stockCode FROM stock.stock_data  
        <!-- 判断条件参数是否为空 -->
	    <if test="stockName != null and stockName != ''">
	        where (stock_name like '%${stockName}%' or stock_code like '%${stockName}%' ) 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
        ORDER BY data_date DESC LIMIT 10000000000 )  AS temp GROUP BY  temp.stockCode
        order by temp.stockCode asc  
        limit #{startIndex} , #{pageSize}
    </select> 
    
    <select id="maxMacroDataList" parameterType="map" resultType="com.qingyun.entity.MacroData">
        SELECT * FROM (SELECT now_price as highPrice,data_date as highPriceDate,stock_code as stockCode FROM stock.stock_data  
        <!-- 判断条件参数是否为空 -->
	    <if test="stockName != null and stockName != ''">
	        where (stock_name like '%${stockName}%' or stock_code like '%${stockName}%' ) 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
        ORDER BY now_price DESC LIMIT 10000000000 )  AS temp GROUP BY  temp.stockCode
        order by temp.stockCode asc  
        limit #{startIndex} , #{pageSize}
    </select> 
    
    <select id="minMacroDataList" parameterType="map" resultType="com.qingyun.entity.MacroData">
        SELECT * FROM (SELECT now_price as lowPrice,data_date as lowPriceDate,stock_code as stockCode FROM stock.stock_data  
        <!-- 判断条件参数是否为空 -->
	    <if test="stockName != null and stockName != ''">
	        where (stock_name like '%${stockName}%' or stock_code like '%${stockName}%' ) 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
        ORDER BY now_price asc LIMIT 10000000000 )  AS temp GROUP BY  temp.stockCode
        order by temp.stockCode asc  
        limit #{startIndex} , #{pageSize}
    </select> 
    
    <select id="firstMacroDataList" parameterType="map" resultType="com.qingyun.entity.MacroData">
        SELECT * FROM (SELECT now_price as firstPrice,data_date as firstPriceDate,stock_code as stockCode FROM stock.stock_data  
        <!-- 判断条件参数是否为空 -->
	    <if test="stockName != null and stockName != ''">
	        where (stock_name like '%${stockName}%' or stock_code like '%${stockName}%' ) 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
        ORDER BY data_date asc LIMIT 10000000000 )  AS temp GROUP BY  temp.stockCode
        order by temp.stockCode asc  
        limit #{startIndex} , #{pageSize}
    </select> 
    
    <select id="monthDataSitua" parameterType="map" resultType="com.qingyun.entity.SituaData">
        SELECT LEFT(data_date,7) AS dataDate,ROUND(AVG(now_price),2) AS averagePrice,SUM(diff_price) AS gainsPrice
		FROM stock.stock_data WHERE basic_stock_id =#{basicStockId} 
		 <!-- 判断条件参数是否为空 -->
	    <if test="startDate != null and startDate != ''">
	        and data_date<![CDATA[>=]]> #{startDate} 
	    </if>
	    <if test="endDate != null and endDate != ''">
	        and data_date<![CDATA[<=]]> #{endDate} 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
		GROUP BY dataDate ORDER BY dataDate
    </select> 

    <select id="yearDataSitua" parameterType="map" resultType="com.qingyun.entity.SituaData">
        SELECT LEFT(data_date,4) AS dataDate,ROUND(AVG(now_price),2) AS averagePrice,SUM(diff_price) AS gainsPrice
		FROM stock.stock_data WHERE basic_stock_id =#{basicStockId} 
		 <!-- 判断条件参数是否为空 -->
	    <if test="startDate != null and startDate != ''">
	        and data_date<![CDATA[>=]]> #{startDate} 
	    </if>
	    <if test="endDate != null and endDate != ''">
	        and data_date<![CDATA[<=]]> #{endDate} 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
		GROUP BY dataDate ORDER BY dataDate
     </select> 
     
     <select id="quarterDataSitua" parameterType="map" resultType="com.qingyun.entity.SituaData">
        SELECT CONCAT(YEAR(data_date),'_',quarter(data_date)) AS dataDate,ROUND(AVG(now_price),2) AS averagePrice,SUM(diff_price) AS gainsPrice
		FROM stock.stock_data WHERE basic_stock_id =#{basicStockId} 
		 <!-- 判断条件参数是否为空 -->
	    <if test="startDate != null and startDate != ''">
	        and data_date<![CDATA[>=]]> #{startDate} 
	    </if>
	    <if test="endDate != null and endDate != ''">
	        and data_date<![CDATA[<=]]> #{endDate} 
	    </if>
	    <!-- 判断条件参数是否为某值 -->
		GROUP BY dataDate ORDER BY dataDate
     </select> 
     
     <select id="nowAllMacroDataList" resultType="com.qingyun.entity.MacroData">
        SELECT * FROM (SELECT now_price as nowPrice,data_date as nowPriceDate,stock_code as stockCode,stock_name as stockName FROM stock.stock_data  
        ORDER BY data_date DESC LIMIT 10000000000 )  AS temp GROUP BY  temp.stockCode
        order by temp.stockCode asc  
    </select> 
    
    <select id="minAllMacroDataList" resultType="com.qingyun.entity.MacroData">
        SELECT * FROM (SELECT now_price as lowPrice,data_date as lowPriceDate,stock_code as stockCode FROM stock.stock_data  
        ORDER BY now_price asc LIMIT 10000000000 )  AS temp GROUP BY  temp.stockCode
        order by temp.stockCode asc  
    </select> 
    
    <select id="basicStockAll" resultType="com.qingyun.entity.MacroData">
         SELECT stock_code as stockCode FROM stock.basic_stock WHERE appear_addr_code <![CDATA[!= ]]>'s_sh'
    </select> 


    
    
</mapper>